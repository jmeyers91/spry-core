const Ajv = require('ajv');

function getOptions({ env, args }) {
  return {
    port: args.port || env.PORT,
    cors: args.cors || env.CORS,
    public: args.public || env.PUBLIC,
    apiPrefix: args.apiPrefix || env.API_PREFIX,
    databaseDisabled: args.databaseDisabled || env.DATABASE_DISABLED,
    webserverDisabled: args.webserverDisabled || env.WEBSERVER_DISABLED,
    runSeeds: args.seed || args.runSeeds || env.RUN_SEEDS,
    runMigrateLatest: args.migrate || args.runMigrateLatest || env.RUN_MIGRATE_LATEST,
    runMigrateRollback: args.rollback || args.runMigrateRollback || env.RUN_MIGRATE_ROLLBACK,
    shortLived: args.shortLived || env.SHORT_LIVED,
    databaseClient: args.databaseClient || env.DATABASE_CLIENT,
    databaseUrl: args.databaseUrl || env.DATABASE_URL,
    databaseVersion: args.databaseVersion || env.DATABASE_VERSION,
    databaseSocketPath: args.databaseSocketPath || env.DATABASE_SOCKET_PATH,
    databaseFile: args.databaseFile || env.DATABASE_FILE,
    databaseHost: args.databaseHost || env.DATABASE_HOST,
    databaseUser: args.databaseUser || env.DATABASE_USER || env.USER,
    databasePassword: args.databasePassword || env.DATABASE_PASSWORD,
    databaseName: args.databaseName || env.DATABASE_NAME,
    databaseDebug: args.databaseDebug || env.DATABASE_DEBUG,
    modelPatterns: [args.modelPattern || env.MODEL_PATTERN || '**/*.model.js'],
    routerPatterns: [args.routerPattern || env.ROUTER_PATTERN || '**/*.router.js'],
    actionPatterns: [args.actionPattern || env.ACTION_PATTERN || '**/*.action.js'],
    seedPatterns: [args.seedPattern || env.SEED_PATTERN || '**/*.seed.js'],
    migrationPatterns: [args.migrationPattern || env.MIGRATION_PATTERN || '**/*.migration.js'],
    hookPatterns: [args.hookPattern || env.HOOK_PATTERN || '**/*.hook.js'],
    ignorePatterns: [args.ignorePattern || env.IGNORE_PATTERN || 'node_modules'],
  };
}

module.exports = getOptions;

module.exports.validate = Ajv({
  useDefaults: true,
  coerceTypes: true,
}).compile({
  $async: true,
  type: 'object',
  properties: {
    port: { type: 'integer', default: 8080 },
    cors: { type: 'boolean', default: false },
    public: { type: 'string', default: 'public' },
    apiPrefix: { type: 'string', default: '/api' },
    databaseClient: { type: 'string', default: 'sqlite3' },
    databaseFile: { type: 'string', default: 'database.sqlite' },
    databaseUrl: { type: 'string' },
    databaseVersion: { type: 'string' },
    databaseSocketPath: { type: 'string' },
    databaseHost: { type: 'string' },
    databaseUser: { type: 'string' },
    databasePassword: { type: 'string' },
    databaseName: { type: 'string' },
    databaseDebug: { type: 'boolean', default: false },
    databaseDisabled: { type: 'boolean', default: false },
    webserverDisabled: { type: 'boolean', default: false },
    databaseConfig: { type: 'object', default: { client: 'sqlite', useNullAsDefault: true } },
    runSeeds: { type: 'boolean', default: false },
    runMigrateLatest: { type: 'boolean', default: false },
    runMigrateRollback: { type: 'boolean', default: false },
    shortLived: { type: 'boolean', default: false },
    modelPatterns: { type: 'array' },
    routerPatterns: { type: 'array' },
    actionPatterns: { type: 'array' },
    seedPatterns: { type: 'array' },
    migrationPatterns: { type: 'array' },
    hookPatterns: { type: 'array' },
    ignorePatterns: { type: 'array' },
  },
});
